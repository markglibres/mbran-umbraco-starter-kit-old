//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace MBran.Models
{
	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, IContentHeader, IContentImageFile, IMetaTagHeader, IMetaTagImage, ISitemapSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Summary
		///</summary>
		[ImplementPropertyType("contentSummary")]
		public string ContentSummary
		{
			get { return MBran.Models.ContentHeader.GetContentSummary(this); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("contentTitle")]
		public string ContentTitle
		{
			get { return MBran.Models.ContentHeader.GetContentTitle(this); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("contentImage")]
		public IPublishedContent ContentImage
		{
			get { return MBran.Models.ContentImageFile.GetContentImage(this); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return MBran.Models.MetaTagHeader.GetMetaDescription(this); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("metaTitle")]
		public string MetaTitle
		{
			get { return MBran.Models.MetaTagHeader.GetMetaTitle(this); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("metaImage")]
		public IPublishedContent MetaImage
		{
			get { return MBran.Models.MetaTagImage.GetMetaImage(this); }
		}

		///<summary>
		/// Change Frequency
		///</summary>
		[ImplementPropertyType("sitemapChangeFrequency")]
		public decimal SitemapChangeFrequency
		{
			get { return MBran.Models.SitemapSettings.GetSitemapChangeFrequency(this); }
		}

		///<summary>
		/// Priority
		///</summary>
		[ImplementPropertyType("sitemapPriority")]
		public decimal SitemapPriority
		{
			get { return MBran.Models.SitemapSettings.GetSitemapPriority(this); }
		}

		///<summary>
		/// Hide in sitemap
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return MBran.Models.SitemapSettings.GetUmbracoNaviHide(this); }
		}
	}
}
